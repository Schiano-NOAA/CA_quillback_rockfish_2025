## Figures {#sec-figures}
 
```{r} 
#| label: 'set-rda-dir-figs'
#| echo: false 
#| warning: false 
#| eval: true 
rda_dir <- here::here("documents", "rda_files")
``` 

```{r} 
#| label: 'fig-recruitment-setup'
#| echo: false 
#| warning: false 
#| eval: true 
# if the recruitment figure rda exists:
if (file.exists(file.path(rda_dir, 'recruitment_figure.rda'))){

  # load rda
  load(file.path(rda_dir, 'recruitment_figure.rda'))

  # save rda with plot-specific name
  recruitment_plot_rda <- rda

  # remove generic rda object
  rm(rda)

  # save figure, caption, and alt text as separate objects; set eval to TRUE
  recruitment_plot <- recruitment_plot_rda$figure
  recruitment_cap <- recruitment_plot_rda$cap
  recruitment_alt_text <- recruitment_plot_rda$alt_text
  eval_recruitment <- TRUE

# if the recruitment figure rda does not exist, don't evaluate the next chunk
} else {eval_recruitment <- FALSE}
``` 

```{r} 
#| label: 'fig-recruitment'
#| echo: false 
#| warning: false 
#| eval: !expr eval_recruitment 
#| fig-cap: !expr if(eval_recruitment) recruitment_cap 
#| fig-alt: !expr if(eval_recruitment) recruitment_alt_text
recruitment_plot
``` 

```{r} 
#| label: 'fig-spawning_biomass-setup'
#| echo: false 
#| warning: false 
#| eval: true 
# if the spawning biomass figure rda exists:
if (file.exists(file.path(rda_dir, 'spawning.biomass_figure.rda'))){

  # load rda
  load(file.path(rda_dir, 'spawning.biomass_figure.rda'))

  # save rda with plot-specific name
  spawning_biomass_plot_rda <- rda

  # remove generic rda object
  rm(rda)

  # save figure, caption, and alt text as separate objects; set eval to TRUE
  spawning_biomass_plot <- spawning_biomass_plot_rda$figure
  spawning_biomass_cap <- spawning_biomass_plot_rda$cap
  spawning_biomass_alt_text <- spawning_biomass_plot_rda$alt_text
  eval_spawning_biomass <- TRUE

# if the spawning biomass figure rda does not exist, don't evaluate the next chunk
} else {eval_spawning_biomass <- FALSE}
``` 

```{r} 
#| label: 'fig-spawning_biomass'
#| echo: false 
#| warning: false 
#| eval: !expr eval_spawning_biomass 
#| fig-cap: !expr if(eval_spawning_biomass) spawning_biomass_cap 
#| fig-alt: !expr if(eval_spawning_biomass) spawning_biomass_alt_text
spawning_biomass_plot
``` 

```{r} 
#| label: 'fig-biomass-setup'
#| echo: false 
#| warning: false 
#| eval: true 
# if the biomass figure rda exists:
if (file.exists(file.path(rda_dir, 'biomass_figure.rda'))){

  # load rda
  load(file.path(rda_dir, 'biomass_figure.rda'))

  # save rda with plot-specific name
  biomass_plot_rda <- rda

  # remove generic rda object
  rm(rda)

  # save figure, caption, and alt text as separate objects; set eval to TRUE
  biomass_plot <- biomass_plot_rda$figure
  biomass_cap <- biomass_plot_rda$cap
  biomass_alt_text <- biomass_plot_rda$alt_text
  eval_biomass <- TRUE

# if the biomass figure rda does not exist, don't evaluate the next chunk
} else {eval_biomass <- FALSE}
``` 

```{r} 
#| label: 'fig-biomass'
#| echo: false 
#| warning: false 
#| eval: !expr eval_biomass 
#| fig-cap: !expr if(eval_biomass) biomass_cap 
#| fig-alt: !expr if(eval_biomass) biomass_alt_text
biomass_plot
``` 

```{r} 
#| label: 'fig-landings-setup'
#| echo: false 
#| warning: false 
#| eval: true 
# if the landings figure rda exists:
if (file.exists(file.path(rda_dir, 'landings_figure.rda'))){

  # load rda
  load(file.path(rda_dir, 'landings_figure.rda'))

  # save rda with plot-specific name
  landings_plot_rda <- rda

  # remove generic rda object
  rm(rda)

  # save figure, caption, and alt text as separate objects; set eval to TRUE
  landings_plot <- landings_plot_rda$figure
  landings_cap <- landings_plot_rda$cap
  landings_alt_text <- landings_plot_rda$alt_text
  eval_landings <- TRUE

# if the landings figure rda does not exist, don't evaluate the next chunk
} else {eval_landings <- FALSE}
``` 

```{r} 
#| label: 'fig-landings'
#| echo: false 
#| warning: false 
#| eval: !expr eval_landings 
#| fig-cap: !expr if(eval_landings) landings_cap 
#| fig-alt: !expr if(eval_landings) landings_alt_text
landings_plot
``` 

```{r} 
#| label: 'fig-recruitment_deviations-setup'
#| echo: false 
#| warning: false 
#| eval: true 
# if the recruitment deviations figure rda exists:
if (file.exists(file.path(rda_dir, 'recruitment.deviations_figure.rda'))){

  # load rda
  load(file.path(rda_dir, 'recruitment.deviations_figure.rda'))

  # save rda with plot-specific name
  recruitment_deviations_plot_rda <- rda

  # remove generic rda object
  rm(rda)

  # save figure, caption, and alt text as separate objects; set eval to TRUE
  recruitment_deviations_plot <- recruitment_deviations_plot_rda$figure
  recruitment_deviations_cap <- recruitment_deviations_plot_rda$cap
  recruitment_deviations_alt_text <- recruitment_deviations_plot_rda$alt_text
  eval_recruitment_deviations <- TRUE

# if the recruitment deviations figure rda does not exist, don't evaluate the next chunk
} else {eval_recruitment_deviations <- FALSE}
``` 

```{r} 
#| label: 'fig-recruitment_deviations'
#| echo: false 
#| warning: false 
#| eval: !expr eval_recruitment_deviations 
#| fig-cap: !expr if(eval_recruitment_deviations) recruitment_deviations_cap 
#| fig-alt: !expr if(eval_recruitment_deviations) recruitment_deviations_alt_text
recruitment_deviations_plot
``` 







```{r}
#| label: fig-len-agg-fit
#| echo: false
#| warning: false
#| eval: true
#| fig-cap: "Length composition aggregated across years by fleet with the model with estimated fit to the data by sex (red female, blue male, green unsexed)"
#| fig-alt: "Aggregated length comps are fit reasonably well."

knitr::include_graphics(
    "r4ss_plots/comp_lenfit__aggregated_across_time.png"
)
```

```{r}
#| label: fig-len-all-pearson
#| echo: false
#| warning: false
#| eval: true
#| fig-cap: "Pearson residuals for fit to length composition data for all fleets (red female, blue male, grey unsexed). Closed bubbles are positive residuals (observed > expected) and open bubbles are negative residuals (observed < expected)."
#| fig-alt: "See 'Pearson' column in CompReport.sso for values."

knitr::include_graphics(
    "r4ss_plots/comp_lenfit__multi-fleet_comparison.png"
)
```

```{r}
#| label: fig-mean-len-com
#| echo: false
#| warning: false
#| eval: true
#| fig-cap: "Mean length (cm) for Commercial with 95% confidence intervals based on adjusted input sample sizes. The blue line is the model expectation."
#| fig-alt: "FROG"

knitr::include_graphics(
    "r4ss_plots/comp_lenfit_data_weighting_TA1-8_CA_Commercial.png"
)
```

```{r}
#| label: fig-mean-len-rec
#| echo: false
#| warning: false
#| eval: true
#| fig-cap: "Mean length (cm) for Recreational with 95% confidence intervals based on adjusted input sample sizes. The blue line is the model expectation."
#| fig-alt: "FROG"

knitr::include_graphics(
    "r4ss_plots/comp_lenfit_data_weighting_TA1-8_CA_Recreational.png"
)
```

```{r}
#| label: fig-mean-len-ccfrp
#| echo: false
#| warning: false
#| eval: true
#| fig-cap: "Mean length (cm) for CCFRP with 95% confidence intervals based on adjusted input sample sizes. The blue line is the model expectation."
#| fig-alt: "FROG"

knitr::include_graphics(
    "r4ss_plots/comp_lenfit_data_weighting_TA1-8_CA_CCFRP.png"
)
```

```{r}
#| label: fig-mean-len-rov
#| echo: false
#| warning: false
#| eval: true
#| fig-cap: "Mean length (cm) for ROV with 95% confidence intervals based on adjusted input sample sizes. The blue line is the model expectation."
#| fig-alt: "FROG"

knitr::include_graphics(
    "r4ss_plots/comp_lenfit_data_weighting_TA1-8_CA_ROV.png"
)
```
